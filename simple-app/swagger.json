{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Simple Application",
    "description": "My Simple Application API"
  },
  "host": "localhost:3002",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "Token",
      "description": "API to get token to access the main API"
    },
    {
      "name": "Users",
      "description": "API related users information in the system"
    }
  ],
  "schemes": ["http"],
  "consumes": ["application/json"],
  "securityDefinitions": {
    "bearerAuth": {
      "name": "x-access-token",
      "in": "header",
      "scheme":"Bearer",
      "type": "apiKey",
      "description": "JWT Authorization header, token can be generated by using API POST /account/auth"
    }
  },
  "produces": ["application/json"],
  "paths": {
    "/auth/token": {
      "post": {
        "tags": ["Token"],
        "summary": "login to get token to access main api",
        "operationId": "createUser",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "credential admin",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inputToken"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/outputTokenSuccess"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/outputValidationError"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/outputGenericError"
            }
          }
        }
      }
    },
    "/users": {
      "post": {
        "security": [{ "bearerAuth": [] }],
        "tags": ["Users"],
        "summary": "register new user with email and password",
        "operationId": "createUser",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "user object that want to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inputNewUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/outputNewUser"
            }
          },
          "404": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/outputValidationError"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/outputValidationError"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/outputGenericError"
            }
          }
        }
      },
      "get": {
        "security": [{ "bearerAuth": [] }],
        "tags": ["Users"],
        "summary": "Get list user registered in the system",
        "operationId": "findAllUser",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/outputUser"
              }
            }
          },
          "403": {
            "description": "You do not have permission to access without token"
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/outputGenericError"
            }
          }
        }
      }
    },
    "/users/{userId}/profile": {
      "get": {
        "security": [{ "bearerAuth": [] }],
        "tags": ["Users"],
        "summary": "get profile of user",
        "operationId": "getProfile",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user, same user id as response from api get all user",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/outputProfile"
            }
          },
          "404": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/outputValidationError"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/outputValidationError"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/outputGenericError"
            }
          }
        }
      },
      "patch":{
        "security": [{ "bearerAuth": [] }],
        "tags": ["Users"],
        "summary": "update profile of user (name)",
        "operationId": "updateProfile",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user, same user id as response from api get all user",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "user object that want to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inputUpdateProfile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/outputGenericSuccess"
            }
          },
          "404": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/outputValidationError"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/outputValidationError"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/outputGenericError"
            }
          }
        }
      
      }
    },
    "/users/{userId}/credential": {
      "patch": {
        "security": [{ "bearerAuth": [] }],
        "tags": ["Users"],
        "summary": "Update user/password Auth0",
        "operationId": "updateCredential",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user, same user id as response from api get all user",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "password object that want to update/replace",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inputUpdatePassword"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/outputGenericSuccess"
            }
          },
          "404": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/outputValidationError"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/outputValidationError"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/outputGenericError"
            }
          }
        }
      }
    },
    "/users/{userId}/emailverification": {
      "post": {
        "security": [{ "bearerAuth": [] }],
        "tags": ["Users"],
        "summary": "send verification email for user who has registered the account using user and password",
        "operationId": "sendVerificationEmail",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user, same user id as response from api get all user",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/outputGenericError"
            }
          },
          "404": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/outputValidationError"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/outputValidationError"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/outputValidationErrorConflict"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/outputGenericError"
            }
          }
        }
      }
    },
    "/users/statistic": {
      "get": {
        "security": [{ "bearerAuth": [] }],
        "tags": ["Users"],
        "summary": "Get statistic about total signup,active sessions today and average number of active session in the last 7 days",
        "operationId": "findStatistic",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/outputStatistic"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/outputGenericError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "inputNewUser": {
      "properties": {
        "email": {
          "type": "string",
          "example": "mymail@gmail.com"
        },
        "password": {
          "type": "string",
          "example": "Mypassword123!"
        }
      }
    },
    "outputNewUser":{
      "properties": {
        "userId": {
          "type": "string",
          "example": "auth0|3337f14fa0738e6000722bc6afd"
        }
      }
    },
    "inputUpdateProfile":{
      "properties": {
        "name": {
          "type": "string",
          "example": "Gustaf"
        }
      }
    },
    "inputUpdatePassword": {
      "properties": {
        "oldPassword": {
          "type": "string",
          "example": "MyCurrentpassword123!"
        },
        "newPassword": {
          "type": "string",
          "example": "Mypassword123!"
        },
        "newPasswordAgain":{
          "type": "string",
          "example": "Mypassword123!"
        }
      }
    },
    "outputUser": {
      "properties": {
        "signUpDate": {
          "type": "string",
          "example": "2020-05-05T23:09:99.23Z"
        },
        "userId": {
          "type": "string",
          "example": "auth0|892f06894cd02b80069194e51"
        },
        "name": {
          "type": "string",
          "example": "gustaf"
        },
        "email": {
          "type": "string",
          "example": "gustaf@gmail.com"
        },
        "loginCount": {
          "type": "integer",
          "example": 10
        },
        "lastSessionCookiesDate": {
          "type": "string",
          "example": "2020-05-05T23:09:99.23Z"
        }
      }
    },
    "outputStatistic": {
      "properties": {
        "totalSignup": {
          "type": "integer"
        },
        "activeSession": {
          "type": "integer"
        },
        "activeSessionLast7Days": {
          "type": "integer"
        }
      }
    },
    "outputProfile": {
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "inputToken": {
      "properties": {
        "username": {
          "type": "string",
          "example": "testing"
        },
        "password": {
          "type": "string",
          "example": "testing"
        }
      }
    },
    "outputTokenSuccess": {
      "properties": {
        "access_token": {
          "type": "string",
          "example": "xxxxxxxx"
        },
        "expires_in": {
          "type": "string",
          "example": 86400
        },
        "type": {
          "type": "string",
          "example": "bearer"
        }
      }
    },
    "outputGenericSuccess": {
      "properties": {
        "description": {
          "type": "string"
        }
      }
    },
    "outputGenericError": {
      "properties": {
        "errorName": {
          "type": "string",
          "example": "Invalid-Connection"
        },
        "errorDescription": {
          "type": "string",
          "example": "Internal error has occured"
        }
      }
    },
    "outputValidationErrorConflict":{
      "properties": {
        "errorName": {
          "type": "string",
          "example": "[Auth0] Conflict - auth0_idp_error"
        },
        "errorDescription": {
          "type": "string",
          "example": "The user already exists."
        }
      }
    },
    "outputValidationError": {
      "properties": {
        "errorName": {
          "type": "string",
          "example": "Invalid-Mandatory-Input"
        },
        "errorDescription": {
          "type": "string",
          "example": "Mandatory inputs are not provided completely"
        }
      }
    }
  }
}
